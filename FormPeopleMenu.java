
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author joao
 */
public class FormPeopleMenu extends javax.swing.JFrame {
    
    /**
     * Creates new form FormPeopleMenu
     */
    
    private BDStorage storage = BDStorage.createStorage();
    
    private static FormPeopleMenu p;
    
    private FormPeopleMenu() {
        initComponents();
    }

    public static FormPeopleMenu createPeopleMenu() {
        if(p == null) {
            p = new FormPeopleMenu();
        }
        return p;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        custumerTb = new javax.swing.JTable();
        searchBt = new javax.swing.JButton();
        cpfTf = new javax.swing.JTextField();
        peopleLb = new javax.swing.JLabel();
        cpfLb = new javax.swing.JLabel();
        employeeCB = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeTb = new javax.swing.JTable();
        refreshBt = new javax.swing.JButton();
        peopleMb = new javax.swing.JMenuBar();
        custumerMenu = new javax.swing.JMenu();
        addCustumer = new javax.swing.JMenuItem();
        editCustumer = new javax.swing.JMenuItem();
        employeeMenu = new javax.swing.JMenu();
        addEmployee = new javax.swing.JMenuItem();
        editEmployee = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        custumerTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Custumer", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(custumerTb);

        searchBt.setText("Search");
        searchBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtActionPerformed(evt);
            }
        });

        cpfTf.setText("Insert CPF");
        cpfTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfTfActionPerformed(evt);
            }
        });

        peopleLb.setText("All Registered People:");

        cpfLb.setText("Search People by CPF:");

        employeeCB.setText("Employee");

        employeeTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(employeeTb);

        refreshBt.setText("Remove People...");
        refreshBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtActionPerformed(evt);
            }
        });

        custumerMenu.setText("Custumer");

        addCustumer.setText("Add Custumer...");
        addCustumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustumerActionPerformed(evt);
            }
        });
        custumerMenu.add(addCustumer);

        editCustumer.setText("Edit Custumer...");
        editCustumer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCustumerActionPerformed(evt);
            }
        });
        custumerMenu.add(editCustumer);

        peopleMb.add(custumerMenu);

        employeeMenu.setText("Employee");

        addEmployee.setText("Add Employee...");
        addEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeActionPerformed(evt);
            }
        });
        employeeMenu.add(addEmployee);

        editEmployee.setText("Edit Employee...");
        editEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmployeeActionPerformed(evt);
            }
        });
        employeeMenu.add(editEmployee);

        peopleMb.add(employeeMenu);

        setJMenuBar(peopleMb);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(peopleLb)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfTf, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpfLb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(employeeCB)
                                .addGap(15, 15, 15)
                                .addComponent(searchBt))
                            .addComponent(refreshBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(cpfLb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBt)
                    .addComponent(cpfTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(peopleLb)
                    .addComponent(refreshBt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtActionPerformed
        searchPeoplebyCpf();
    }//GEN-LAST:event_searchBtActionPerformed

    private void cpfTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfTfActionPerformed

    private void addCustumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustumerActionPerformed
        FormAddCustumer.createAddCustumer().setVisible(true);
    }//GEN-LAST:event_addCustumerActionPerformed

    private void editCustumerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCustumerActionPerformed
        FormEditCustumer.createEditCustumer().setVisible(true);
    }//GEN-LAST:event_editCustumerActionPerformed

    private void addEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeActionPerformed
        FormAddEmployee.createAddEmployee().setVisible(true);
    }//GEN-LAST:event_addEmployeeActionPerformed

    private void editEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEmployeeActionPerformed
        FormEditEmployee.createEditEmployee().setVisible(true);
    }//GEN-LAST:event_editEmployeeActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void refreshBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtActionPerformed
        FormDelPeople.createDelPeople().setVisible(true);
    }//GEN-LAST:event_refreshBtActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        listCustumerTable();
        listEmployeeTable();
    }//GEN-LAST:event_formWindowGainedFocus

    private void listCustumerTable() {
        DefaultTableModel modTable = (DefaultTableModel)custumerTb.getModel();
        int linePos = 0;
        modTable.setRowCount(linePos);
        
        for(Customer c : storage.getCustomers()) {
           modTable.insertRow(linePos, new Object[]{c.getName(), c.getCpf()});
           linePos++;
        }
    }
    
    private void listEmployeeTable() {
        DefaultTableModel modTable = (DefaultTableModel)employeeTb.getModel();
        int linePos = 0;
        modTable.setRowCount(linePos);
        
        for(Employee e : storage.getEmployees()) {
           modTable.insertRow(linePos, new Object[]{e.getName(), e.getCpf()});
           linePos++;
        }
    }
    
    private void searchPeoplebyCpf() {
        try{
            if(employeeCB.isSelected()) {
                int id = GetArrayId.createGetArrayId().getEmployeeId(cpfTf.getText());
                String info = "Name: " + storage.getEmployees().get(id).getName() +
                            "\nCPF: " + storage.getEmployees().get(id).getCpf() + 
                            "\nPhone: " + storage.getEmployees().get(id).getPhone() +
                            "\nRole: " + storage.getEmployees().get(id).getRole();
                Dialogs.createDialogs().infoDialog(info, "Employee search results");
            }
            else {
                int id = GetArrayId.createGetArrayId().getCustumerId(cpfTf.getText());
                String info = "Name: " + storage.getCustomers().get(id).getName() +
                            "\nCPF: " + storage.getCustomers().get(id).getCpf() + 
                            "\nPhone: " + storage.getCustomers().get(id).getPhone() +
                            "\nPurchase Count: " + storage.getCustomers().get(id).getPurchaseCount();
                Dialogs.createDialogs().infoDialog(info, "Custumer search results");
            }
        }
        catch(ItemNotFoundExeption infe) {
            infe.itemNotFoundErr();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPeopleMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPeopleMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPeopleMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPeopleMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPeopleMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addCustumer;
    private javax.swing.JMenuItem addEmployee;
    private javax.swing.JLabel cpfLb;
    private javax.swing.JTextField cpfTf;
    private javax.swing.JMenu custumerMenu;
    private javax.swing.JTable custumerTb;
    private javax.swing.JMenuItem editCustumer;
    private javax.swing.JMenuItem editEmployee;
    private javax.swing.JCheckBox employeeCB;
    private javax.swing.JMenu employeeMenu;
    private javax.swing.JTable employeeTb;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel peopleLb;
    private javax.swing.JMenuBar peopleMb;
    private javax.swing.JButton refreshBt;
    private javax.swing.JButton searchBt;
    // End of variables declaration//GEN-END:variables
}
