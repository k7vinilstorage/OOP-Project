
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author joao
 */
public class FormOperationMenu extends javax.swing.JFrame {

    /**
     * Creates new form FormOperationMenu
     */
    
    private BDStorage storage = BDStorage.createStorage();
    
    private static FormOperationMenu o;
    
    public FormOperationMenu() {
        initComponents();
    }
    
    public static FormOperationMenu createOperationMenu() {
        if(o == null) {
            o = new FormOperationMenu();
        }
        return o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        operationLb = new javax.swing.JLabel();
        operationTf = new javax.swing.JTextField();
        searchBt = new javax.swing.JButton();
        saleCb = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        saleTb = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        AquisitionTb = new javax.swing.JTable();
        removeOpBt = new javax.swing.JButton();
        acqLb = new javax.swing.JLabel();
        saleLb = new javax.swing.JLabel();
        exitBt = new javax.swing.JButton();
        operationMb = new javax.swing.JMenuBar();
        saleMenu = new javax.swing.JMenu();
        addSale = new javax.swing.JMenuItem();
        editSale = new javax.swing.JMenuItem();
        acquisitionMenu = new javax.swing.JMenu();
        addAcquisition = new javax.swing.JMenuItem();
        editAcquisition = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Operation Menu");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        operationLb.setText("Search Operation by Id:");

        searchBt.setText("Search");
        searchBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtActionPerformed(evt);
            }
        });

        saleCb.setText("Sale");
        saleCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleCbActionPerformed(evt);
            }
        });

        saleTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Product", "Buyer CPF", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(saleTb);

        AquisitionTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Product", "Supplyer", "Amount"
            }
        ));
        jScrollPane2.setViewportView(AquisitionTb);

        removeOpBt.setText("Remove Operation");
        removeOpBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeOpBtActionPerformed(evt);
            }
        });

        acqLb.setText("Acquisitions:");

        saleLb.setText("Sales");

        exitBt.setText("Close");
        exitBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtActionPerformed(evt);
            }
        });

        saleMenu.setText("Sale");

        addSale.setText("Add Sale...");
        addSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSaleActionPerformed(evt);
            }
        });
        saleMenu.add(addSale);

        editSale.setText("Edit Sale...");
        editSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSaleActionPerformed(evt);
            }
        });
        saleMenu.add(editSale);

        operationMb.add(saleMenu);

        acquisitionMenu.setText("Acquisition");

        addAcquisition.setText("Add Acquisition...");
        addAcquisition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAcquisitionActionPerformed(evt);
            }
        });
        acquisitionMenu.add(addAcquisition);

        editAcquisition.setText("Edit Acquisition...");
        editAcquisition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAcquisitionActionPerformed(evt);
            }
        });
        acquisitionMenu.add(editAcquisition);

        operationMb.add(acquisitionMenu);

        setJMenuBar(operationMb);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saleLb)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(operationLb)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(acqLb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(exitBt)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(operationTf, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(saleCb)
                                        .addGap(18, 18, 18)
                                        .addComponent(searchBt))
                                    .addComponent(removeOpBt))))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(operationLb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(operationTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBt)
                    .addComponent(saleCb))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeOpBt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acqLb, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saleLb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(exitBt)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saleCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saleCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saleCbActionPerformed

    private void addSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSaleActionPerformed
        FormAddSale.createAddSale().setVisible(true);
    }//GEN-LAST:event_addSaleActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        listAcquisitions();
        listSale();
    }//GEN-LAST:event_formWindowGainedFocus

    private void searchBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtActionPerformed
        searchOpById();
    }//GEN-LAST:event_searchBtActionPerformed

    private void addAcquisitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAcquisitionActionPerformed
        FormAddAcquisition.createAddAcquisition().setVisible(true);
    }//GEN-LAST:event_addAcquisitionActionPerformed

    private void removeOpBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeOpBtActionPerformed
        FormDelOperation.createDelOperation().setVisible(true);
    }//GEN-LAST:event_removeOpBtActionPerformed

    private void editSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSaleActionPerformed
        FormEditSale.createEditSale().setVisible(true);
    }//GEN-LAST:event_editSaleActionPerformed

    private void editAcquisitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAcquisitionActionPerformed
        FormEditAcquisition.createEditAcquisition().setVisible(true);
    }//GEN-LAST:event_editAcquisitionActionPerformed

    private void exitBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtActionPerformed
        exit();
    }//GEN-LAST:event_exitBtActionPerformed

    private void listAcquisitions() {
        DefaultTableModel modTable = (DefaultTableModel)AquisitionTb.getModel();
        int linePos = 0;
        modTable.setRowCount(linePos);
        
        for(Acquisition a : storage.getAcquisitions()) {
           modTable.insertRow(linePos, new Object[]{a.getOpId(), (a.getProductType() + " (" + a.getProduct().getModel() + ")"), a.getSupplyerName(), a.getProductAmount()});
           linePos++;
        }
    }
    
    private void listSale() {
        DefaultTableModel modTable = (DefaultTableModel)saleTb.getModel();
        int linePos = 0;
        modTable.setRowCount(linePos);
        
        for(Sale s : storage.getSales()) {
           modTable.insertRow(linePos, new Object[]{s.getOpId(), (s.getProductType() + " (" + s.getProduct().getModel() + ")"), s.getBuyer().getCpf(), s.getProductAmount()});
           linePos++;
        }
    }
    
    private void searchOpById() {
        int id = 0;
        
        try{
            if(saleCb.isSelected()) {
                id = GetArrayId.createGetArrayId().getSaleId(InputExceptionHandler.createInputExeptionHandler().InputInt(operationTf.getText()));
                String info = "ID: " + storage.getSales().get(id).getOpId() +
                        "\nBuyer: " + storage.getSales().get(id).getBuyer().getName() +
                        "\nBuyer CPF: " + storage.getSales().get(id).getBuyer().getCpf() + 
                        "\nEmployee: " + storage.getSales().get(id).getInCharge().getName() +
                        "\nEmployee: " + storage.getSales().get(id).getInCharge().getCpf() + 
                        "\nProduct Model: " + storage.getSales().get(id).getProduct().getModel() +
                        "\nProduct Type: " + storage.getSales().get(id).getProductType() +
                        "\nAmount: " + storage.getSales().get(id).getProductAmount() + 
                        "\nTotal Cost: " + storage.getSales().get(id).getTotalCost() +
                        "\nDate: " + storage.getSales().get(id).getDate();
                Dialogs.createDialogs().infoDialog(info, "Sale Search Results");
            }
            else {
                id = GetArrayId.createGetArrayId().getAcquisitionId(InputExceptionHandler.createInputExeptionHandler().InputInt(operationTf.getText()));
                String info = "ID: " + storage.getAcquisitions().get(id).getOpId() +
                        "\nSupplyer: " + storage.getAcquisitions().get(id).getSupplyerName() +
                        "\nEmployee: " + storage.getAcquisitions().get(id).getInCharge().getName() +
                        "\nEmployee: " + storage.getAcquisitions().get(id).getInCharge().getCpf() + 
                        "\nProduct Model: " + storage.getAcquisitions().get(id).getProduct().getModel() +
                        "\nProduct Type: " + storage.getAcquisitions().get(id).getProductType() +
                        "\nAmount: " + storage.getAcquisitions().get(id).getProductAmount() + 
                        "\nTotal Cost: " + storage.getAcquisitions().get(id).getTotalCost() +
                        "\nDate: " + storage.getAcquisitions().get(id).getDate();
                Dialogs.createDialogs().infoDialog(info, "Acquisition Search Results");
            }
            
            operationTf.setText("");
        }
        catch(IntInputErrorException iee) {
            iee.intErr("id");
        }
        catch(ItemNotFoundExeption infe) {
            infe.itemNotFoundErr();
        }
    }
    
    public void exit(){
        int resp = JOptionPane.showConfirmDialog(
                null,
                "Do you really want to exit?",
                "Exit",
                JOptionPane.YES_NO_OPTION
        );
        
       if(resp == 0){
           dispose();
       }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormOperationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormOperationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormOperationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormOperationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormOperationMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AquisitionTb;
    private javax.swing.JLabel acqLb;
    private javax.swing.JMenu acquisitionMenu;
    private javax.swing.JMenuItem addAcquisition;
    private javax.swing.JMenuItem addSale;
    private javax.swing.JMenuItem editAcquisition;
    private javax.swing.JMenuItem editSale;
    private javax.swing.JButton exitBt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel operationLb;
    private javax.swing.JMenuBar operationMb;
    private javax.swing.JTextField operationTf;
    private javax.swing.JButton removeOpBt;
    private javax.swing.JCheckBox saleCb;
    private javax.swing.JLabel saleLb;
    private javax.swing.JMenu saleMenu;
    private javax.swing.JTable saleTb;
    private javax.swing.JButton searchBt;
    // End of variables declaration//GEN-END:variables
}
